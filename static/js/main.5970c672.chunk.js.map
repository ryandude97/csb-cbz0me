{"version":3,"sources":["App.js","index.js"],"names":["useStyles","makeStyles","greenAvatar","margin","color","backgroundColor","green","TodoList","todo","index","completeTodo","deleteTodo","classes","List","ListItem","button","onClick","style","textDecoration","isCompleted","ListItemAvatar","Avatar","className","ListItemText","primary","text","ListItemSecondaryAction","ListItemIcon","IconButton","edge","TodoForm","addTodo","useState","value","setValue","onSubmit","e","preventDefault","TextField","id","placeholder","onChange","target","TodoApp","todos","setTodos","newTodos","splice","Container","maxWidth","Paper","map","ReactDOM","render","document","getElementById"],"mappings":"+SAmBMA,EAAYC,YAAW,CAC3BC,YAAa,CACXC,OAAQ,GACRC,MAAO,OACPC,gBAAiBC,IAAM,QAI3B,SAASC,EAAT,GAA8D,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,WACvCC,EAAUZ,IAEhB,OACE,cAACa,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CACEC,QAAM,EACNC,QAAS,kBAAMN,EAAaD,EAAnB,EACTQ,MAAO,CAAEC,eAAgBV,EAAKW,YAAc,eAAiB,IAH/D,UAKE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAQC,UAAWV,EAAQV,YAA3B,SACE,cAAC,IAAD,QAGJ,cAACqB,EAAA,EAAD,CAAcC,QAAShB,EAAKiB,OAC5B,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,KAAK,MACL,aAAW,SACXb,QAAS,kBAAML,EAAWF,EAAjB,EAHX,SAKE,cAAC,IAAD,cAOb,CAED,SAASqB,EAAT,GAAgC,IAAZC,EAAW,EAAXA,QAClB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAQA,OACE,sBAAMC,SARa,SAACC,GACpBA,EAAEC,iBACGJ,IACLF,EAAQE,GACRC,EAAS,IACV,EAGC,SACE,cAACI,EAAA,EAAD,CACEC,GAAG,gBACHpC,OAAO,SACP8B,MAAOA,EACPO,YAAY,cACZC,SAAU,SAACL,GAAD,OAAOF,EAASE,EAAEM,OAAOT,MAAzB,KAIjB,CAEc,SAASU,IACtB,MAA0BX,mBAAS,CACjC,CACEP,KAAM,sBACNN,aAAa,GAEf,CACEM,KAAM,gBACNN,aAAa,GAEf,CACEM,KAAM,aACNN,aAAa,KAXjB,mBAAOyB,EAAP,KAAcC,EAAd,KAoBMnC,EAAe,SAACD,GACpB,IAAMqC,EAAQ,YAAOF,GACrBE,EAASrC,GAAOU,aAAeyB,EAAMnC,GAAOU,YAC5C0B,EAASC,EACV,EAEKnC,EAAa,SAACF,GAClB,IAAMqC,EAAQ,YAAOF,GACrBE,EAASC,OAAOtC,EAAO,GACvBoC,EAASC,EACV,EAED,OACE,eAACE,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,cAACnB,EAAD,CAAUC,QAnBE,SAACN,GACf,IAAMqB,EAAQ,CAAI,CAAErB,SAAN,mBAAiBmB,IAC/BC,EAASC,EACV,IAiBG,cAACI,EAAA,EAAD,UACGN,EAAMO,KAAI,SAAC3C,EAAMC,GAAP,OACT,cAACF,EAAD,CAEEE,MAAOA,EACPD,KAAMA,EACNE,aAAcA,EACdC,WAAYA,GAJPF,EAFE,QAYlB,CC9HD2C,IAASC,OAAO,cAACV,EAAD,IAAaW,SAASC,eAAe,Q","file":"static/js/main.5970c672.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  ListItemAvatar,\n  ListItemIcon,\n  Avatar,\n  TextField,\n  IconButton,\n  Container,\n  Paper\n} from \"@material-ui/core\";\nimport { green } from \"@material-ui/core/colors\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst useStyles = makeStyles({\n  greenAvatar: {\n    margin: 10,\n    color: \"#fff\",\n    backgroundColor: green[500]\n  }\n});\n\nfunction TodoList({ todo, index, completeTodo, deleteTodo }) {\n  const classes = useStyles();\n\n  return (\n    <List>\n      <ListItem\n        button\n        onClick={() => completeTodo(index)}\n        style={{ textDecoration: todo.isCompleted ? \"line-through\" : \"\" }}\n      >\n        <ListItemAvatar>\n          <Avatar className={classes.greenAvatar}>\n            <AssignmentIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText primary={todo.text} />\n        <ListItemSecondaryAction>\n          <ListItemIcon>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"delete\"\n              onClick={() => deleteTodo(index)}\n            >\n              <DeleteIcon />\n            </IconButton>\n          </ListItemIcon>\n        </ListItemSecondaryAction>\n      </ListItem>\n    </List>\n  );\n}\n\nfunction TodoForm({ addTodo }) {\n  const [value, setValue] = useState(\"\");\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <TextField\n        id=\"standard-bare\"\n        margin=\"normal\"\n        value={value}\n        placeholder=\"Add Todo...\"\n        onChange={(e) => setValue(e.target.value)}\n      />\n    </form>\n  );\n}\n\nexport default function TodoApp() {\n  const [todos, setTodos] = useState([\n    {\n      text: \"Practice JavaScript\",\n      isCompleted: false\n    },\n    {\n      text: \"Update Resume\",\n      isCompleted: false\n    },\n    {\n      text: \"Go Kyaking\",\n      isCompleted: false\n    }\n  ]);\n\n  const addTodo = (text) => {\n    const newTodos = [{ text }, ...todos];\n    setTodos(newTodos);\n  };\n\n  const completeTodo = (index) => {\n    const newTodos = [...todos];\n    newTodos[index].isCompleted = !todos[index].isCompleted;\n    setTodos(newTodos);\n  };\n\n  const deleteTodo = (index) => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  return (\n    <Container maxWidth=\"md\">\n      <TodoForm addTodo={addTodo} />\n      <Paper>\n        {todos.map((todo, index) => (\n          <TodoList\n            key={index}\n            index={index}\n            todo={todo}\n            completeTodo={completeTodo}\n            deleteTodo={deleteTodo}\n          />\n        ))}\n      </Paper>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport TodoApp from \"./App\";\n\nReactDOM.render(<TodoApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}